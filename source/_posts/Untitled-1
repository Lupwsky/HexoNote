{% tabs 选项卡 %}
<!-- tab Java -->
呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈……
<!-- endtab -->

<!-- tab XML -->
你好
<!-- endtab -->

<!-- tab CSS -->
**这是选项卡 3** 哇, 你找到我了！φ(≧ω≦*)♪～
<!-- endtab -->
{% endtabs %}

# Spring 容器底层依赖的技术
Spring 通过简单的配置文件可以完成 bean 的实例化和依赖注入, 能完成这些功能主要依靠 Java 所提供的反射功能, 除此之外, 同时依赖 Java 资源文件的访问功能。

## 反射

鉴于篇幅, 见文章:

## 资源访问
Spring 通过读取配置文件来获取 Bena De 依赖关系, 需要使用进行资源的访问, JDK 所提供的资源访问类 java.net.URL、File类等并不能很好的访问类路径和 WEB 容器上下文的资源文件, 因此 Spring 设计了一个 Resource 接口, 并提供了相关的实现类, 以便于在各种场景下方便的访问资源问件, 具体的实现类如下图所示:

![IMAGE](Spring笔记-SpringIoC容器相关知识/20180327233518.png)


启动 Nginx
/user/sbin/nginx -c /etc/nginx/nginx.config


alias ls='ls -G'
alias lc='clear; ls'
alias ll='ls -l'
alias vim='mvim'
  
export M2_HOME=/Users/lupengwei/Maven/apache-maven-3.5.0
export PATH=$PATH:$M2_HOME/bin

export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home
export PATH=$PATH:$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

export ROCKETMQ_HOME=/Users/lupengwei/RocketMQ/alibaba-rocketmq
export PATH=$PATH:$ROCKETMQ_HOME/bin

export PATH=$PATH:/Users/lupengwei/Library/Android/sdk/platform-tools

172.18.17.156
